enum ShowKind {
  MOVIE
  SERIES
  EPISODE
}

interface Show {
  kind: ShowKind!
  title: String!
  recordedOn: Time!
  description: String!
}

# Movies are any show that is a single program, which includes both cinema and one-off specials.
type Movie implements Show {
  kind: ShowKind!
  recordingId: String! 
  title: String!
  recordedOn: Time!
  description: String!

  movieYear: Int!
}

# A series is any show with multiple seasons/episodes.
type Series implements Show {
  kind: ShowKind!
  collectionId: String!
  title: String!
  recordedOn: Time!
  description: String!

  episodes(filter: [ShowFilter], offset: Int = 0, limit: Int = 25): [Episode!]!
}

type Episode implements Show {
  kind: ShowKind!
  recordingId: String!
  collectionId: String!
  title: String!
  recordedOn: Time!
  description: String!

  originalAirDate: Date!
  seasonNumber: Int!
  episodeNumber: Int!
  episodeTitle: String!
  episodeDescription: String!
}

input ShowFilter {
  kind: FilterOperator
  title: FilterOperator
  recordedOn: FilterOperator
  description: FilterOperator
  movieYear: FilterOperator
  originalAirDate: FilterOperator
  seasonNumber: FilterOperator
  episodeNumber: FilterOperator
  episodeTitle: FilterOperator
  episodeDescription: FilterOperator
}

input MovieFilter {
  kind: FilterOperator
  title: FilterOperator
  recordedOn: FilterOperator
  description: FilterOperator
  movieYear: FilterOperator
}

input SeriesFilter {
  kind: FilterOperator
  title: FilterOperator
  recordedOn: FilterOperator
  description: FilterOperator
}

input EpisodeFilter {
  kind: FilterOperator
  title: FilterOperator
  recordedOn: FilterOperator
  description: FilterOperator
  originalAirDate: FilterOperator
  seasonNumber: FilterOperator
  episodeNumber: FilterOperator
  episodeTitle: FilterOperator
  episodeDescription: FilterOperator
}
